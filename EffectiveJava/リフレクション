リフレクション

ロードされたクラスに関する情報へのプログラムによるアクセスを提供する。
ある Class のインスタンスが与えられれば、その Class インスタンスで表されているクラスの、コンストラクタ、メソッド、フィールドを表している、 Constructor インスタンス、Method インスタンス、Field インスタンスを取得できる。
それらのオブジェクトは、クラスのメンバー名、フィールド型、メソッドのシグニチャなどへのプログラムによるアクセスを提供する。

デメリット
・コンパイル時の型検査の恩恵を全て失う
・リフレクションによるアクセスを行うコードは、冗長。
・パフォーマンスが悪くなる

使いみち
リフレクションは、コンポーネントに基づくアプリケーションビルダーツール用に設計された。そのようなツールは、一般に要求に応じてクラスをロードし、そのクラスがサポートしているメソッドやコンストラクタが何であるかを調べるためにリフレクションを使用している。
リフレクションの使用を必要とするアプリケーションも存在する。クラスブラウザー、オブジェクトインスペクター、コード解析ツール、インタプリタ的組み込みシステムなど。